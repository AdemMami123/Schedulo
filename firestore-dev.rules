rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if true; // Public read for username lookup and booking operations
    }
    
    // User profiles collection - users can read/write their own profile
    match /userProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if true; // Public read for booking pages and operations
    }
    
    // Bookings collection - enhanced permissions for all booking scenarios
    match /bookings/{bookingId} {
      // Allow all operations for now to fix booking issues
      // TODO: Implement more granular permissions later
      allow read, write: if true;
    }
    
    // Groups collection - users can create groups and access groups they're in
    match /groups/{groupId} {
      // Allow creating new groups
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      
      // Allow reading groups where user is creator or member
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.token.email in resource.data.members);
      
      // Allow updating groups only by creator
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      
      // Allow deleting groups only by creator
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Group bookings collection - enhanced permissions for all group booking scenarios
    match /groupBookings/{bookingId} {
      // Allow all operations for group bookings to fix permission issues
      // This ensures group bookings work across all scenarios
      allow read, write: if true;
    }
    
    // Meeting invitations collection - for group booking attendee invitations
    match /meetingInvitations/{invitationId} {
      // Allow all operations for meeting invitations
      allow read, write: if true;
    }
    
    // Calendar reservations collection - for calendar integration
    match /calendarReservations/{reservationId} {
      // Allow all operations for calendar reservations
      allow read, write: if true;
    }
    
    // Group activities collection - for logging group actions
    match /groupActivities/{activityId} {
      // Allow creating activity logs
      allow create: if request.auth != null;
      
      // Allow reading activity logs for groups where user is member/creator
      allow read: if request.auth != null;
    }
  }
}
